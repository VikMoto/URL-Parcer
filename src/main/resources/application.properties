server.port=8085

logging.level.root=INFO

spring.jpa.hibernate.ddl-auto=update
spring.jpa.generate-ddl=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.url=jdbc:postgresql://localhost:5433/urlfeederservice_db
#spring.datasource.url=jdbc:mysql://127.0.0.1:3307/urlfeederservice
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driverClassName=org.postgresql.Driver
spring.jpa.show-sql=true
spring.jpa.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.naming_strategy = org.hibernate.cfg.ImprovedNamingStrategy

#flyway configuration
spring.flyway.user = postgres
spring.flyway.password = postgres
spring.flyway.defaultSchema = public

flyway.baseline-on-migrate=true
flyway.locations=classpath:src/main/resources/db/migration
flyway.createSchemas=false
flyway.initSql=CREATE IF NOT EXISTS flyway_history_schema
flyway.schemas=flyway_history_schema,public

#spring.kafka.producer.bootstrap-servers=172.17.0.1:9092
#spring.kafka.producer.bootstrap-servers=localhost:9092
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

com.parser.urlfeederservice.topics={'text/html':'html_topic','image/jpeg':'jpg_topic','application/pdf':'pdf_topic'}

com.parser.urlfeederservice.service.cooldown=7















